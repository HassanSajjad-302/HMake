
#ifndef ARRAYDECLARATIONS_HPP
#define ARRAYDECLARATIONS_HPP

#include "Configure.hpp"

inline constexpr string_view leafRunTests[] = {"BOOST_LEAF_AUTO_test.cpp",
                                               "BOOST_LEAF_ASSIGN_test.cpp",
                                               "BOOST_LEAF_CHECK_test.cpp",
                                               "boost_exception_test.cpp",
                                               "capture_exception_async_test.cpp",
                                               "capture_exception_result_async_test.cpp",
                                               "capture_exception_result_unload_test.cpp",
                                               "capture_exception_state_test.cpp",
                                               "capture_exception_unload_test.cpp",
                                               "capture_result_async_test_.cpp",
                                               "capture_result_async_test.cpp",
                                               "capture_result_state_test.cpp",
                                               "context_activator_test.cpp",
                                               "context_deduction_test.cpp",
                                               "capture_result_unload_test.cpp",
                                               "ctx_handle_all_test.cpp",
                                               "ctx_handle_some_test.cpp",
                                               "ctx_remote_handle_all_test.cpp",
                                               "ctx_remote_handle_some_test.cpp",
                                               "diagnostic_info_test1.cpp",
                                               "diagnostic_info_test2.cpp",
                                               "diagnostic_info_test3.cpp",
                                               "diagnostic_info_test4.cpp",
                                               "diagnostic_info_test5.cpp",
                                               "e_errno_test.cpp",
                                               "e_LastError_test.cpp",
                                               "error_code_test.cpp",
                                               "error_id_test.cpp",
                                               "exception_test.cpp",
                                               "exception_to_result_test.cpp",
                                               "function_traits_test.cpp",
                                               "github_issue53_test.cpp",
                                               "github_issue53x_test.cpp",
                                               "handle_all_other_result_test.cpp",
                                               "handle_all_test.cpp",
                                               "handle_basic_test.cpp",
                                               "handle_some_other_result_test.cpp",
                                               "handle_some_test.cpp",
                                               "match_test.cpp",
                                               "match_member_test.cpp",
                                               "match_value_test.cpp",
                                               "multiple_errors_test.cpp",
                                               "on_error_accumulate_basic_test.cpp",
                                               "on_error_accumulate_nested_error_exception_test.cpp",
                                               "on_error_accumulate_nested_error_result_test.cpp",
                                               "on_error_accumulate_nested_new_error_exception_test.cpp",
                                               "on_error_accumulate_nested_new_error_result_test.cpp",
                                               "on_error_accumulate_nested_success_exception_test.cpp",
                                               "on_error_accumulate_nested_success_result_test.cpp",
                                               "on_error_defer_basic_test.cpp",
                                               "on_error_defer_nested_error_exception_test.cpp",
                                               "on_error_defer_nested_error_result_test.cpp",
                                               "on_error_defer_nested_new_error_exception_test.cpp",
                                               "on_error_defer_nested_new_error_result_test.cpp",
                                               "on_error_defer_nested_success_exception_test.cpp",
                                               "on_error_defer_nested_success_result_test.cpp",
                                               "on_error_preload_basic_test.cpp",
                                               "on_error_preload_exception_test.cpp",
                                               "on_error_preload_nested_error_exception_test.cpp",
                                               "on_error_preload_nested_error_result_test.cpp",
                                               "on_error_preload_nested_new_error_exception_test.cpp",
                                               "on_error_preload_nested_new_error_result_test.cpp",
                                               "on_error_preload_nested_success_exception_test.cpp",
                                               "on_error_preload_nested_success_result_test.cpp",
                                               "optional_test.cpp",
                                               "print_test.cpp",
                                               "result_bad_result_test.cpp",
                                               "result_implicit_conversion_test.cpp",
                                               "result_load_test.cpp",
                                               "result_print_test.cpp",
                                               "result_ref_test.cpp",
                                               "result_state_test.cpp",
                                               "tls_array_alloc_test1.cpp",
                                               "tls_array_alloc_test2.cpp",
                                               "tls_array_alloc_test3.cpp",
                                               "tls_array_test.cpp",
                                               "to_variant_test.cpp",
                                               "try_capture_all_test.cpp",
                                               "try_catch_error_id_test.cpp",
                                               "try_catch_system_error_test.cpp",
                                               "try_catch_test.cpp",
                                               "try_exception_and_result_test.cpp"};

inline constexpr string_view leafCompileTests[] = {
    "_hpp_common_test.cpp",    "_hpp_config_test.cpp",        "_hpp_context_test.cpp",  "_hpp_error_test.cpp",
    "_hpp_exception_test.cpp", "_hpp_handle_errors_test.cpp", "_hpp_on_error_test.cpp", "_hpp_pred_test.cpp",
    "_hpp_result_test.cpp",    "_hpp_to_variant_test.cpp",    "_hpp_leaf_test.cpp",
};

inline constexpr string_view leafCompileFailTests[] = {"_compile-fail-arg_boost_error_info_1.cpp",
                                                       "_compile-fail-arg_boost_error_info_2.cpp",
                                                       "_compile-fail-arg_catch_1.cpp",
                                                       "_compile-fail-arg_catch_2.cpp",
                                                       "_compile-fail-arg_match_1.cpp",
                                                       "_compile-fail-arg_match_2.cpp",
                                                       "_compile-fail-arg_rvalue_ref.cpp",
                                                       "_compile-fail-BOOST_LEAF_ASSIGN.cpp",
                                                       "_compile-fail-BOOST_LEAF_AUTO.cpp",
                                                       "_compile-fail-diagnostic_info.cpp",
                                                       "_compile-fail-error_info.cpp",
                                                       "_compile-fail-exception_1.cpp",
                                                       "_compile-fail-exception_2.cpp",
                                                       "_compile-fail-new_error.cpp",
                                                       "_compile-fail-result_1.cpp",
                                                       "_compile-fail-result_2.cpp",
                                                       "_compile-fail-result_3.cpp",
                                                       "_compile-fail-result_4.cpp",
                                                       "_compile-fail-verbose_diagnostic_info.cpp"};

inline constexpr string_view leafExamples[] = {
    "error_log.cpp",
    "error_trace.cpp",
    "exception_to_result.cpp",
    "print_half.cpp",
};

inline constexpr string_view leafExamplesPrintFile[] = {"print_file_eh.cpp", "print_file_result.cpp"};

inline constexpr string_view mp11RunTests[] = {
    "mp_size.cpp",
    "mp_size_2.cpp",
    "mp_empty.cpp",
    "mp_empty_2.cpp",
    "mp_assign.cpp",
    "mp_assign_2.cpp",
    "mp_clear.cpp",
    "mp_clear_2.cpp",
    "mp_front.cpp",
    "mp_front_2.cpp",
    "mp_pop_front.cpp",
    "mp_pop_front_2.cpp",
    "mp_second.cpp",
    "mp_second_2.cpp",
    "mp_third.cpp",
    "mp_third_2.cpp",
    "mp_push_front.cpp",
    "mp_push_front_2.cpp",
    "mp_push_back.cpp",
    "mp_push_back_2.cpp",
    "mp_rename.cpp",
    "mp_rename_2.cpp",
    "mp_append.cpp",
    "mp_append_2.cpp",
    "mp_append_3.cpp",
    "mp_append_sf.cpp",
    "mp_replace_front.cpp",
    "mp_replace_front_2.cpp",
    "mp_replace_second.cpp",
    "mp_replace_second_2.cpp",
    "mp_replace_third.cpp",
    "mp_replace_third_2.cpp",
    "mp_apply_q.cpp",
    "mp_apply_q_sf.cpp",
    "mp_is_list.cpp",
    "mp_list_c.cpp",
    "mp_transform_front.cpp",
    "mp_transform_front_2.cpp",
    "mp_transform_second.cpp",
    "mp_transform_second_2.cpp",
    "mp_transform_third.cpp",
    "mp_transform_third_2.cpp",
    "mp_list_v.cpp",
    "mp_rename_v.cpp",
    "mp_is_value_list.cpp",
    "mp_transform.cpp",
    "mp_transform_2.cpp",
    "mp_transform_q.cpp",
    "mp_transform_q_2.cpp",
    "mp_transform_sf.cpp",
    "mp_transform_if.cpp",
    "mp_transform_if_q.cpp",
    "mp_filter.cpp",
    "mp_fill.cpp",
    "mp_fill_2.cpp",
    "mp_count.cpp",
    "mp_count_if.cpp",
    "mp_count_if_q.cpp",
    "mp_contains.cpp",
    "mp_starts_with.cpp",
    "mp_starts_with_sf.cpp",
    "mp_repeat.cpp",
    "mp_repeat_2.cpp",
    "mp_repeat_3.cpp",
    "mp_product.cpp",
    "mp_drop.cpp",
    "mp_drop_2.cpp",
    "mp_iota.cpp",
    "mp_iota_2.cpp",
    "mp_at.cpp",
    "mp_at_2.cpp",
    "mp_at_sf.cpp",
    "mp_take.cpp",
    "mp_take_2.cpp",
    "mp_slice.cpp",
    "mp_slice_2.cpp",
    "mp_replace.cpp",
    "mp_replace_if.cpp",
    "mp_replace_if_q.cpp",
    "mp_copy_if.cpp",
    "mp_copy_if_q.cpp",
    "mp_remove.cpp",
    "mp_remove_if.cpp",
    "mp_remove_if_q.cpp",
    "mp_partition.cpp",
    "mp_partition_q.cpp",
    "mp_sort.cpp",
    "mp_sort_q.cpp",
    "mp_find.cpp",
    "mp_find_if.cpp",
    "mp_find_if_q.cpp",
    "mp_reverse.cpp",
    "mp_fold.cpp",
    "mp_fold_q.cpp",
    "mp_fold_q_sf.cpp",
    "mp_reverse_fold.cpp",
    "mp_reverse_fold_q.cpp",
    "mp_unique.cpp",
    "mp_unique_if.cpp",
    "mp_unique_if_q.cpp",
    "mp_all_of.cpp",
    "mp_all_of_q.cpp",
    "mp_any_of.cpp",
    "mp_any_of_q.cpp",
    "mp_none_of.cpp",
    "mp_none_of_q.cpp",
    "mp_replace_at.cpp",
    "mp_replace_at_c.cpp",
    "mp_for_each.cpp",
    "mp_insert.cpp",
    "mp_insert_2.cpp",
    "mp_erase.cpp",
    "mp_erase_2.cpp",
    "mp_with_index.cpp",
    "mp_with_index_cx.cpp",
    "mp_from_sequence.cpp",
    "mp_from_sequence_2.cpp",
    "mp_min_element.cpp",
    "mp_min_element_2.cpp",
    "mp_min_element_q.cpp",
    "mp_min_element_q_2.cpp",
    "mp_max_element.cpp",
    "mp_max_element_2.cpp",
    "mp_max_element_q.cpp",
    "mp_max_element_q_2.cpp",
    "mp_nth_element.cpp",
    "mp_nth_element_q.cpp",
    "mp_back.cpp",
    "mp_back_2.cpp",
    "mp_pop_back.cpp",
    "mp_pop_back_2.cpp",
    "mp_flatten.cpp",
    "mp_rotate_left.cpp",
    "mp_rotate_right.cpp",
    "mp_power_set.cpp",
    "mp_partial_sum.cpp",
    "mp_iterate.cpp",
    "mp_pairwise_fold.cpp",
    "mp_pairwise_fold_q.cpp",
    "mp_sliding_fold.cpp",
    "mp_sliding_fold_q.cpp",
    "mp_intersperse.cpp",
    "mp_split.cpp",
    "mp_join.cpp",
    "integral.cpp",
    "mp_value.cpp",
    "mp_identity.cpp",
    "mp_inherit.cpp",
    "mp_if.cpp",
    "mp_if_sf.cpp",
    "mp_eval_if.cpp",
    "mp_eval_if_sf.cpp",
    "mp_valid.cpp",
    "mp_defer.cpp",
    "mp_quote.cpp",
    "mp_invoke_q.cpp",
    "mp_invoke_q_sf.cpp",
    "mp_quote_trait.cpp",
    "mp_cond.cpp",
    "mp_cond_sf.cpp",
    "mp_not_fn.cpp",
    "mp_eval_if_not.cpp",
    "mp_eval_or.cpp",
    "mp_compose.cpp",
    "mp_valid_and_true.cpp",
    "integer_sequence.cpp",
    "tuple_for_each.cpp",
    "tuple_apply.cpp",
    "construct_from_tuple.cpp",
    "tuple_transform.cpp",
    "tuple_transform_2.cpp",
    "mp_set_contains.cpp",
    "mp_set_push_back.cpp",
    "mp_set_push_front.cpp",
    "mp_is_set.cpp",
    "mp_set_union.cpp",
    "mp_set_union_sf.cpp",
    "mp_set_difference.cpp",
    "mp_set_difference_sf.cpp",
    "mp_set_intersection.cpp",
    "mp_set_intersection_sf.cpp",
    "mp_all.cpp",
    "mp_all_2.cpp",
    "mp_and.cpp",
    "mp_any.cpp",
    "mp_any_2.cpp",
    "mp_or.cpp",
    "mp_same.cpp",
    "mp_plus.cpp",
    "mp_less.cpp",
    "mp_min.cpp",
    "mp_max.cpp",
    "mp_similar.cpp",
    "mp_map_find.cpp",
    "mp_map_find_2.cpp",
    "mp_map_find_3.cpp",
    "mp_map_contains.cpp",
    "mp_map_insert.cpp",
    "mp_map_replace.cpp",
    "mp_map_erase.cpp",
    "mp_map_update.cpp",
    "mp_map_update_q.cpp",
    "mp_map_keys.cpp",
    "mp_is_map.cpp",
    "mp_bind.cpp",
    "mp_bind_q.cpp",
    "mp_bind_front.cpp",
    "mp_bind_back.cpp",
    "mpl.cpp",
    "mpl_list.cpp",
    "mpl_tuple.cpp",
    "version.cpp",
    "mp11_version.cpp",
    "list_version.cpp",
    "algorithm_version.cpp",
    "integral_version.cpp",
    "utility_version.cpp",
    "function_version.cpp",
    "map_version.cpp",
    "set_version.cpp",
    "bind_version.cpp",
    "integer_sequence_version.cpp",
    "tuple_version.cpp",
    "mpl_version.cpp",
};

inline constexpr string_view mp11CompileTests[] = {
    "mp11.cpp",
    "complex_h.cpp",
    "mp_compose_sf.cpp",
    "tuple_for_each_cx.cpp",
    "tuple_apply_cx.cpp",
    "construct_from_tuple_cx.cpp",
    "tuple_transform_cx.cpp",
};

inline constexpr string_view preprocessorTests[] = {
    "arithmetic.cpp", "array.cpp", "comparison.cpp", "control.cpp",     "debug.cpp",      "facilities.cpp",
    "iteration.cpp",  "list.cpp",  "logical.cpp",    "punctuation.cpp", "repetition.cpp", "selection.cpp",
    "seq.cpp",        "slot.cpp",  "stringize.cpp",  "tuple.cpp",       "variadic.cpp",
};

inline constexpr string_view preprocessorTests512[] = {
    "arithmetic.cpp", "array.cpp",     "comparison.cpp", "control.cpp",    "debug.cpp",     "facilities.cpp",
    "iteration.cpp",  "list.cpp",      "logical.cpp",    "repetition.cpp", "selection.cpp", "seq.cpp",
    "slot.cpp",       "stringize.cpp", "tuple.cpp",      "variadic.cpp",
};

inline constexpr string_view preprocessorTests1024[] = {
    "arithmetic.cpp", "array.cpp",     "comparison.cpp", "control.cpp",    "debug.cpp",     "facilities.cpp",
    "iteration.cpp",  "list.cpp",      "logical.cpp",    "repetition.cpp", "selection.cpp", "seq.cpp",
    "slot.cpp",       "stringize.cpp", "tuple.cpp",      "variadic.cpp",
};

inline constexpr string_view preprocessorV128[] = {
    "array.cpp",
    "tuple.cpp",
    "variadic.cpp",
};

inline constexpr string_view preprocessorV256[] = {
    "array.cpp",
    "tuple.cpp",
    "variadic.cpp",
};

inline constexpr string_view preprocessorIsEmpty[] = {"isempty.cpp", "checkempty.cpp", "vaopt.cpp"};

inline constexpr string_view preprocessorIsEmptyFail[] = {"isempty_variadic_standard_failure.cpp",
                                                          "isempty_variadic_standard_failure2.cpp"};

#endif // ARRAYDECLARATIONS_HPP
