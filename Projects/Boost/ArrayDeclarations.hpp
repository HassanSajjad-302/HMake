
#ifndef ARRAYDECLARATIONS_HPP
#define ARRAYDECLARATIONS_HPP

#include "Configure.hpp"

inline constexpr string_view leafRunTests[] = {"BOOST_LEAF_AUTO_test.cpp",
                                               "BOOST_LEAF_ASSIGN_test.cpp",
                                               "BOOST_LEAF_CHECK_test.cpp",
                                               "boost_exception_test.cpp",
                                               "capture_exception_async_test.cpp",
                                               "capture_exception_result_async_test.cpp",
                                               "capture_exception_result_unload_test.cpp",
                                               "capture_exception_state_test.cpp",
                                               "capture_exception_unload_test.cpp",
                                               "capture_result_async_test.cpp",
                                               "capture_result_state_test.cpp",
                                               "context_activator_test.cpp",
                                               "context_deduction_test.cpp",
                                               "capture_result_unload_test.cpp",
                                               "ctx_handle_all_test.cpp",
                                               "ctx_handle_some_test.cpp",
                                               "ctx_remote_handle_all_test.cpp",
                                               "ctx_remote_handle_some_test.cpp",
                                               "e_errno_test.cpp",
                                               "e_LastError_test.cpp",
                                               "error_code_test.cpp",
                                               "error_id_test.cpp",
                                               "exception_test.cpp",
                                               "exception_to_result_test.cpp",
                                               "function_traits_test.cpp",
                                               "github_issue53_test.cpp",
                                               "github_issue53x_test.cpp",
                                               "handle_all_other_result_test.cpp",
                                               "handle_all_test.cpp",
                                               "handle_basic_test.cpp",
                                               "handle_some_other_result_test.cpp",
                                               "handle_some_test.cpp",
                                               "match_test.cpp",
                                               "match_member_test.cpp",
                                               "match_value_test.cpp",
                                               "multiple_errors_test.cpp",
                                               "on_error_accumulate_basic_test.cpp",
                                               "on_error_accumulate_nested_error_exception_test.cpp",
                                               "on_error_accumulate_nested_error_result_test.cpp",
                                               "on_error_accumulate_nested_new_error_exception_test.cpp",
                                               "on_error_accumulate_nested_new_error_result_test.cpp",
                                               "on_error_accumulate_nested_success_exception_test.cpp",
                                               "on_error_accumulate_nested_success_result_test.cpp",
                                               "on_error_defer_basic_test.cpp",
                                               "on_error_defer_nested_error_exception_test.cpp",
                                               "on_error_defer_nested_error_result_test.cpp",
                                               "on_error_defer_nested_new_error_exception_test.cpp",
                                               "on_error_defer_nested_new_error_result_test.cpp",
                                               "on_error_defer_nested_success_exception_test.cpp",
                                               "on_error_defer_nested_success_result_test.cpp",
                                               "on_error_preload_basic_test.cpp",
                                               "on_error_preload_exception_test.cpp",
                                               "on_error_preload_nested_error_exception_test.cpp",
                                               "on_error_preload_nested_error_result_test.cpp",
                                               "on_error_preload_nested_new_error_exception_test.cpp",
                                               "on_error_preload_nested_new_error_result_test.cpp",
                                               "on_error_preload_nested_success_exception_test.cpp",
                                               "on_error_preload_nested_success_result_test.cpp",
                                               "optional_test.cpp",
                                               "print_test.cpp",
                                               "result_bad_result_test.cpp",
                                               "result_implicit_conversion_test.cpp",
                                               "result_load_test.cpp",
                                               "result_print_test.cpp",
                                               "result_ref_test.cpp",
                                               "result_state_test.cpp",
                                               "tls_array_alloc_test1.cpp",
                                               "tls_array_alloc_test2.cpp",
                                               "tls_array_alloc_test3.cpp",
                                               "tls_array_test.cpp",
                                               "to_variant_test.cpp",
                                               "try_capture_all_test.cpp",
                                               "try_catch_error_id_test.cpp",
                                               "try_catch_system_error_test.cpp",
                                               "try_catch_test.cpp",
                                               "try_exception_and_result_test.cpp"};

inline constexpr string_view leafCompileTests[] = {
    "_hpp_common_test.cpp",    "_hpp_config_test.cpp",        "_hpp_context_test.cpp",  "_hpp_error_test.cpp",
    "_hpp_exception_test.cpp", "_hpp_handle_errors_test.cpp", "_hpp_on_error_test.cpp", "_hpp_pred_test.cpp",
    "_hpp_result_test.cpp",    "_hpp_to_variant_test.cpp",    "_hpp_leaf_test.cpp",
};

inline constexpr string_view leafCompileFailTests[] = {"_compile-fail-arg_boost_error_info_1.cpp",
                                                       "_compile-fail-arg_boost_error_info_2.cpp",
                                                       "_compile-fail-arg_catch_1.cpp",
                                                       "_compile-fail-arg_catch_2.cpp",
                                                       "_compile-fail-arg_match_1.cpp",
                                                       "_compile-fail-arg_match_2.cpp",
                                                       "_compile-fail-arg_rvalue_ref.cpp",
                                                       "_compile-fail-BOOST_LEAF_ASSIGN.cpp",
                                                       "_compile-fail-BOOST_LEAF_AUTO.cpp",
                                                       "_compile-fail-diagnostic_info.cpp",
                                                       "_compile-fail-error_info.cpp",
                                                       "_compile-fail-exception_1.cpp",
                                                       "_compile-fail-exception_2.cpp",
                                                       "_compile-fail-new_error.cpp",
                                                       "_compile-fail-result_1.cpp",
                                                       "_compile-fail-result_2.cpp",
                                                       "_compile-fail-result_3.cpp",
                                                       "_compile-fail-result_4.cpp",
                                                       "_compile-fail-verbose_diagnostic_info.cpp"};

inline constexpr string_view leafExamples[] = {
    "error_log.cpp",
    "error_trace.cpp",
    "exception_to_result.cpp",
    "print_half.cpp",
};

inline constexpr string_view leafExamplesPrintFile[] = {"print_file_result.cpp"};

inline constexpr string_view mp11RunTests[] = {
    "mp_size.cpp",
    "mp_size_2.cpp",
    "mp_empty.cpp",
    "mp_empty_2.cpp",
    "mp_assign.cpp",
    "mp_assign_2.cpp",
    "mp_clear.cpp",
    "mp_clear_2.cpp",
    "mp_front.cpp",
    "mp_front_2.cpp",
    "mp_pop_front.cpp",
    "mp_pop_front_2.cpp",
    "mp_second.cpp",
    "mp_second_2.cpp",
    "mp_third.cpp",
    "mp_third_2.cpp",
    "mp_push_front.cpp",
    "mp_push_front_2.cpp",
    "mp_push_back.cpp",
    "mp_push_back_2.cpp",
    "mp_rename.cpp",
    "mp_rename_2.cpp",
    "mp_append.cpp",
    "mp_append_2.cpp",
    "mp_append_3.cpp",
    "mp_append_sf.cpp",
    "mp_replace_front.cpp",
    "mp_replace_front_2.cpp",
    "mp_replace_second.cpp",
    "mp_replace_second_2.cpp",
    "mp_replace_third.cpp",
    "mp_replace_third_2.cpp",
    "mp_apply_q.cpp",
    "mp_apply_q_sf.cpp",
    "mp_is_list.cpp",
    "mp_list_c.cpp",
    "mp_transform_front.cpp",
    "mp_transform_front_2.cpp",
    "mp_transform_second.cpp",
    "mp_transform_second_2.cpp",
    "mp_transform_third.cpp",
    "mp_transform_third_2.cpp",
    "mp_list_v.cpp",
    "mp_rename_v.cpp",
    "mp_is_value_list.cpp",
    "mp_transform.cpp",
    "mp_transform_2.cpp",
    "mp_transform_q.cpp",
    "mp_transform_q_2.cpp",
    "mp_transform_sf.cpp",
    "mp_transform_if.cpp",
    "mp_transform_if_q.cpp",
    "mp_filter.cpp",
    "mp_fill.cpp",
    "mp_fill_2.cpp",
    "mp_count.cpp",
    "mp_count_if.cpp",
    "mp_count_if_q.cpp",
    "mp_contains.cpp",
    "mp_starts_with.cpp",
    "mp_starts_with_sf.cpp",
    "mp_repeat.cpp",
    "mp_repeat_2.cpp",
    "mp_repeat_3.cpp",
    "mp_product.cpp",
    "mp_drop.cpp",
    "mp_drop_2.cpp",
    "mp_iota.cpp",
    "mp_iota_2.cpp",
    "mp_at.cpp",
    "mp_at_2.cpp",
    "mp_at_sf.cpp",
    "mp_take.cpp",
    "mp_take_2.cpp",
    "mp_slice.cpp",
    "mp_slice_2.cpp",
    "mp_replace.cpp",
    "mp_replace_if.cpp",
    "mp_replace_if_q.cpp",
    "mp_copy_if.cpp",
    "mp_copy_if_q.cpp",
    "mp_remove.cpp",
    "mp_remove_if.cpp",
    "mp_remove_if_q.cpp",
    "mp_partition.cpp",
    "mp_partition_q.cpp",
    "mp_sort.cpp",
    "mp_sort_q.cpp",
    "mp_find.cpp",
    "mp_find_if.cpp",
    "mp_find_if_q.cpp",
    "mp_reverse.cpp",
    "mp_fold.cpp",
    "mp_fold_q.cpp",
    "mp_fold_q_sf.cpp",
    "mp_reverse_fold.cpp",
    "mp_reverse_fold_q.cpp",
    "mp_unique.cpp",
    "mp_unique_if.cpp",
    "mp_unique_if_q.cpp",
    "mp_all_of.cpp",
    "mp_all_of_q.cpp",
    "mp_any_of.cpp",
    "mp_any_of_q.cpp",
    "mp_none_of.cpp",
    "mp_none_of_q.cpp",
    "mp_replace_at.cpp",
    "mp_replace_at_c.cpp",
    // ********   23s vs 3s or 4s  "mp_for_each.cpp",
    "mp_insert.cpp",
    "mp_insert_2.cpp",
    "mp_erase.cpp",
    "mp_erase_2.cpp",
    "mp_with_index.cpp",
    "mp_with_index_cx.cpp",
    "mp_from_sequence.cpp",
    "mp_from_sequence_2.cpp",
    "mp_min_element.cpp",
    "mp_min_element_2.cpp",
    "mp_min_element_q.cpp",
    "mp_min_element_q_2.cpp",
    "mp_max_element.cpp",
    "mp_max_element_2.cpp",
    "mp_max_element_q.cpp",
    "mp_max_element_q_2.cpp",
    "mp_nth_element.cpp",
    "mp_nth_element_q.cpp",
    "mp_back.cpp",
    "mp_back_2.cpp",
    "mp_pop_back.cpp",
    "mp_pop_back_2.cpp",
    "mp_flatten.cpp",
    "mp_rotate_left.cpp",
    "mp_rotate_right.cpp",
    "mp_power_set.cpp",
    "mp_partial_sum.cpp",
    "mp_iterate.cpp",
    "mp_pairwise_fold.cpp",
    "mp_pairwise_fold_q.cpp",
    "mp_sliding_fold.cpp",
    "mp_sliding_fold_q.cpp",
    "mp_intersperse.cpp",
    "mp_split.cpp",
    "mp_join.cpp",
    "integral.cpp",
    "mp_value.cpp",
    "mp_identity.cpp",
    "mp_inherit.cpp",
    "mp_if.cpp",
    "mp_if_sf.cpp",
    "mp_eval_if.cpp",
    "mp_eval_if_sf.cpp",
    "mp_valid.cpp",
    "mp_defer.cpp",
    "mp_quote.cpp",
    "mp_invoke_q.cpp",
    "mp_invoke_q_sf.cpp",
    "mp_quote_trait.cpp",
    "mp_cond.cpp",
    "mp_cond_sf.cpp",
    "mp_not_fn.cpp",
    "mp_eval_if_not.cpp",
    "mp_eval_or.cpp",
    "mp_compose.cpp",
    "mp_valid_and_true.cpp",
    "integer_sequence.cpp",
    "tuple_for_each.cpp",
    "tuple_apply.cpp",
    "construct_from_tuple.cpp",
    "tuple_transform.cpp",
    "tuple_transform_2.cpp",
    "mp_set_contains.cpp",
    "mp_set_push_back.cpp",
    "mp_set_push_front.cpp",
    "mp_is_set.cpp",
    "mp_set_union.cpp",
    "mp_set_union_sf.cpp",
    "mp_set_difference.cpp",
    "mp_set_difference_sf.cpp",
    "mp_set_intersection.cpp",
    "mp_set_intersection_sf.cpp",
    "mp_all.cpp",
    "mp_all_2.cpp",
    "mp_and.cpp",
    "mp_any.cpp",
    "mp_any_2.cpp",
    "mp_or.cpp",
    "mp_same.cpp",
    "mp_plus.cpp",
    "mp_less.cpp",
    "mp_min.cpp",
    "mp_max.cpp",
    "mp_similar.cpp",
    "mp_map_find.cpp",
    "mp_map_find_2.cpp",
    "mp_map_find_3.cpp",
    "mp_map_contains.cpp",
    "mp_map_insert.cpp",
    "mp_map_replace.cpp",
    "mp_map_erase.cpp",
    "mp_map_update.cpp",
    "mp_map_update_q.cpp",
    "mp_map_keys.cpp",
    "mp_is_map.cpp",
    "mp_bind.cpp",
    "mp_bind_q.cpp",
    "mp_bind_front.cpp",
    "mp_bind_back.cpp",
    /*"mpl.cpp",
    "mpl_list.cpp",
    "mpl_tuple.cpp",*/
    "version.cpp",
    "mp11_version.cpp",
    "list_version.cpp",
    "algorithm_version.cpp",
    "integral_version.cpp",
    "utility_version.cpp",
    "function_version.cpp",
    "map_version.cpp",
    "set_version.cpp",
    "bind_version.cpp",
    "integer_sequence_version.cpp",
    "tuple_version.cpp",
    "mpl_version.cpp",
};

inline constexpr string_view mp11CompileTests[] = {
    "mp11.cpp",
    "complex_h.cpp",
    "mp_compose_sf.cpp",
    "tuple_for_each_cx.cpp",
    "tuple_apply_cx.cpp",
    "construct_from_tuple_cx.cpp",
    "tuple_transform_cx.cpp",
};

inline constexpr string_view preprocessorTests[] = {
    "array.cpp",       "comparison.cpp", "control.cpp",   "debug.cpp", "facilities.cpp", "list.cpp",  "logical.cpp",
    "punctuation.cpp", "repetition.cpp", "selection.cpp", "slot.cpp",  "stringize.cpp",  "tuple.cpp", "variadic.cpp",
};

inline constexpr string_view preprocessorTests512[] = {
    "array.cpp",      "comparison.cpp", "control.cpp", "debug.cpp",     "facilities.cpp", "list.cpp",     "logical.cpp",
    "repetition.cpp", "selection.cpp",  "slot.cpp",    "stringize.cpp", "tuple.cpp",      "variadic.cpp",
};

inline constexpr string_view preprocessorTests1024[] = {
    "array.cpp",      "comparison.cpp", "control.cpp", "debug.cpp",     "facilities.cpp", "list.cpp",     "logical.cpp",
    "repetition.cpp", "selection.cpp",  "slot.cpp",    "stringize.cpp", "tuple.cpp",      "variadic.cpp",
};

inline constexpr string_view preprocessorV128[] = {
    "array.cpp",
    "tuple.cpp",
    "variadic.cpp",
};

inline constexpr string_view preprocessorV256[] = {
    "array.cpp",
    "tuple.cpp",
    "variadic.cpp",
};

inline constexpr string_view preprocessorIsEmpty[] = {"isempty.cpp", "checkempty.cpp", "vaopt.cpp"};

inline constexpr string_view preprocessorIsEmptyFail[] = {"isempty_variadic_standard_failure.cpp",
                                                          "isempty_variadic_standard_failure2.cpp"};

inline constexpr string_view systemRunTests[] = {"is_error_code_enum_test.cpp",
                                                 "is_error_condition_enum_test.cpp",
                                                 "errc_test.cpp",
                                                 "errc_test2.cpp",
                                                 "error_category_test2.cpp",
                                                 "error_condition_test.cpp",
                                                 "error_condition_test2.cpp",
                                                 "generic_category_test2.cpp",
                                                 "generic_category_test3.cpp",
                                                 "system_category_test2.cpp",
                                                 "system_category_test3.cpp",
                                                 "linux_error_test.cpp",
                                                 "snprintf_test.cpp",
                                                 "std_interop_test2.cpp",
                                                 "std_interop_test3.cpp",
                                                 "std_interop_test4.cpp",
                                                 "std_interop_test5.cpp",
                                                 "std_interop_test6.cpp",
                                                 "std_interop_test7.cpp",
                                                 "std_interop_test8.cpp",
                                                 "std_interop_test9.cpp",
                                                 "ec_location_test.cpp",
                                                 "error_condition_test3.cpp",
                                                 "error_code_test2.cpp",
                                                 "system_error_test2.cpp",
                                                 "std_interop_test10.cpp",
                                                 "ec_location_test2.cpp",
                                                 "ec_what_test.cpp",
                                                 "system_error_test3.cpp",
                                                 "std_interop_test11.cpp",
                                                 "std_interop_test12.cpp",
                                                 "errc_test4.cpp",
                                                 "std_interop_test13.cpp",
                                                 "std_interop_test14.cpp",
                                                 "ec_location_test3.cpp",
                                                 "ec_location_test4.cpp",
                                                 "error_code_test3.cpp",
                                                 "std_interop_test15.cpp",
                                                 "win32_generic_test.cpp",
                                                 "ec_hash_value_test.cpp",
                                                 "std_interop_test16.cpp",
                                                 "result_default_construct.cpp",
                                                 "result_value_construct.cpp",
                                                 "result_error_construct.cpp",
                                                 "result_copy_construct.cpp",
                                                 "result_move_construct.cpp",
                                                 "result_copy_assign.cpp",
                                                 "result_move_assign.cpp",
                                                 "result_value_access.cpp",
                                                 "result_error_access.cpp",
                                                 "result_swap.cpp",
                                                 "result_eq.cpp",
                                                 "result_range_for.cpp",
                                                 "result_value_construct2.cpp",
                                                 "result_error_construct2.cpp",
                                                 "result_errc_construct.cpp",
                                                 "result_convert_construct.cpp",
                                                 "result_typedefs.cpp",
                                                 "result_value_construct3.cpp",
                                                 "result_error_construct3.cpp",
                                                 "result_emplace.cpp",
                                                 "result_error_construct4.cpp",
                                                 "result_value_construct4.cpp",
                                                 "result_value_construct5.cpp",
                                                 "result_error_move.cpp",
                                                 "result_value_construct6.cpp",
                                                 "result_value_construct7.cpp",
                                                 "result_error_construct5.cpp",
                                                 "result_or_value.cpp",
                                                 "result_or_fn0v.cpp",
                                                 "result_or_fn0r.cpp",
                                                 "result_and_fn1v.cpp",
                                                 "result_and_fn1r.cpp",
                                                 "result_and_eq_fn1v.cpp",
                                                 "result_and_eq_fn1r.cpp",
                                                 "result_in_place_use.cpp",
                                                 "result_or_eq_value.cpp",
                                                 "result_or_eq_fn0v.cpp",
                                                 "result_or_eq_fn0r.cpp"};

inline constexpr string_view typeTraitsRunTests[] = {"add_const_test.cpp",
                                                     "add_cv_test.cpp",
                                                     "add_lvalue_reference_test.cpp",
                                                     "add_pointer_test.cpp",
                                                     "add_reference_test.cpp",
                                                     "add_rvalue_reference_test.cpp",
                                                     "add_volatile_test.cpp",
                                                     "aligned_storage_a2_test.cpp",
                                                     "aligned_storage_empy_test.cpp",
                                                     "aligned_storage_test.cpp",
                                                     "common_type_2_test.cpp",
                                                     "common_type_3_test.cpp",
                                                     "common_type_4_test.cpp",
                                                     "common_type_5_test.cpp",
                                                     "common_type_6_test.cpp",
                                                     "common_type_sfinae2_test.cpp",
                                                     "common_type_sfinae_test.cpp",
                                                     "common_type_test.cpp",
                                                     "conditional_test.cpp",
                                                     "conjunction_test.cpp",
                                                     "copy_cv_ref_test.cpp",
                                                     "copy_cv_test.cpp",
                                                     "copy_reference_test.cpp",
                                                     "cxx14_aliases_test.cpp",
                                                     "decay_test.cpp",
                                                     "detected_or_test.cpp",
                                                     "detected_test.cpp",
                                                     "disjunction_test.cpp",
                                                     "enable_if_test.cpp",
                                                     "extent_test.cpp",
                                                     "floating_point_promotion_test.cpp",
                                                     "function_traits_test.cpp",
                                                     "has_binary_classes0_test.cpp",
                                                     "has_binary_classes1_test.cpp",
                                                     "has_binary_classes2_test.cpp",
                                                     "has_binary_classes3_test.cpp",
                                                     "has_binary_classes4_test.cpp",
                                                     "has_binary_classes5_test.cpp",
                                                     "has_binary_classes6_test.cpp",
                                                     "has_binary_classes7_test.cpp",
                                                     "has_binary_classes8_test.cpp",
                                                     "has_binary_classes9_test.cpp",
                                                     "has_bit_and_assign_test.cpp",
                                                     "has_bit_and_test.cpp",
                                                     "has_bit_or_assign_test.cpp",
                                                     "has_bit_or_test.cpp",
                                                     "has_bit_xor_assign_test.cpp",
                                                     "has_bit_xor_test.cpp",
                                                     "has_complement_test.cpp",
                                                     "has_dereference_test.cpp",
                                                     "has_divides_assign_test.cpp",
                                                     "has_divides_test.cpp",
                                                     "has_equal_to_test.cpp",
                                                     "has_greater_equal_test.cpp",
                                                     "has_greater_test.cpp",
                                                     "has_left_shift_assign_test.cpp",
                                                     "has_left_shift_test.cpp",
                                                     "has_less_equal_test.cpp",
                                                     "has_less_test.cpp",
                                                     "has_logical_and_test.cpp",
                                                     "has_logical_not_test.cpp",
                                                     "has_logical_or_test.cpp",
                                                     "has_minus_assign_test.cpp",
                                                     "has_minus_test.cpp",
                                                     "has_modulus_assign_test.cpp",
                                                     "has_modulus_test.cpp",
                                                     "has_multiplies_assign_test.cpp",
                                                     "has_multiplies_test.cpp",
                                                     "has_negate_test.cpp",
                                                     "has_nothrow_constr_test.cpp",
                                                     "has_nothrow_destructor_test.cpp",
                                                     "has_not_equal_to_test.cpp",
                                                     "has_operator_new_test.cpp",
                                                     "has_plus_assign_test.cpp",
                                                     "has_plus_test.cpp",
                                                     "has_postfix_classes0_test.cpp",
                                                     "has_postfix_classes1_test.cpp",
                                                     "has_postfix_classes2_test.cpp",
                                                     "has_postfix_classes3_test.cpp",
                                                     "has_post_decrement_test.cpp",
                                                     "has_post_increment_test.cpp",
                                                     "has_prefix_classes0_test.cpp",
                                                     "has_prefix_classes1_test.cpp",
                                                     "has_prefix_classes2_test.cpp",
                                                     "has_prefix_classes3_test.cpp",
                                                     "has_pre_decrement_test.cpp",
                                                     "has_pre_increment_test.cpp",
                                                     "has_right_shift_assign_test.cpp",
                                                     "has_right_shift_test.cpp",
                                                     "has_trivial_assign_test.cpp",
                                                     "has_trivial_constr_test.cpp",
                                                     "has_trivial_copy_test.cpp",
                                                     "has_trivial_destructor_test.cpp",
                                                     "has_trivial_move_assign_test.cpp",
                                                     "has_trivial_move_constructor_test.cpp",
                                                     "has_unary_minus_test.cpp",
                                                     "has_unary_plus_test.cpp",
                                                     "has_virtual_destructor_test.cpp",
                                                     "is_abstract_test.cpp",
                                                     "is_arithmetic_test.cpp",
                                                     "is_array_test.cpp",
                                                     "is_assignable_test.cpp",
                                                     "is_base_and_derived_test.cpp",
                                                     "is_base_of_test.cpp",
                                                     "is_bounded_array_test.cpp",
                                                     "is_class_test.cpp",
                                                     "is_complete_test.cpp",
                                                     "is_complex_test.cpp",
                                                     "is_compound_test.cpp",
                                                     "is_constructible_test.cpp",
                                                     "is_const_test.cpp",
                                                     "is_convertible_test.cpp",
                                                     "is_copy_assignable_test.cpp",
                                                     "is_copy_constructible_test.cpp",
                                                     "is_default_constr_test.cpp",
                                                     "is_destructible_test.cpp",
                                                     "is_detected_convertible.cpp",
                                                     "is_detected_exact_test.cpp",
                                                     "is_detected_test.cpp",
                                                     "is_empty_test.cpp",
                                                     "is_enum_test.cpp",
                                                     "is_final_test.cpp",
                                                     "is_floating_point_test.cpp",
                                                     "is_float_test.cpp",
                                                     "is_function_test.cpp",
                                                     "is_fundamental_test.cpp",
                                                     "is_integral_test.cpp",
                                                     "is_list_constructible_test.cpp",
                                                     "is_lvalue_reference_test.cpp",
                                                     "is_member_func_test.cpp",
                                                     "is_member_obj_test.cpp",
                                                     "is_member_pointer_test.cpp",
                                                     "is_noncopyable_test.cpp",
                                                     "is_nothrow_swappable_test.cpp",
                                                     "is_object_test.cpp",
                                                     "is_pod_test.cpp",
                                                     "is_pointer_test.cpp",
                                                     "is_polymorphic_test.cpp",
                                                     "is_reference_test.cpp",
                                                     "is_rvalue_reference_test.cpp",
                                                     "is_same_test.cpp",
                                                     "is_scalar_test.cpp",
                                                     "is_scoped_enum_test.cpp",
                                                     "is_signed_test.cpp",
                                                     "is_stateless_test.cpp",
                                                     "is_swappable_test.cpp",
                                                     "is_trivially_copyable_test.cpp",
                                                     "is_unbounded_array_test.cpp",
                                                     "is_union_test.cpp",
                                                     "is_unscoped_enum_test.cpp",
                                                     "is_unsigned_test.cpp",
                                                     "is_virtual_base_of_test.cpp",
                                                     "is_void_test.cpp",
                                                     "is_volatile_test.cpp",
                                                     "make_signed_test.cpp",
                                                     "make_unsigned_test.cpp",
                                                     "make_void_test.cpp",
                                                     "mpl_interop_test1.cpp",
                                                     "mpl_interop_test2.cpp",
                                                     "negation_test.cpp",
                                                     "promote_basic_test.cpp",
                                                     "promote_enum_test.cpp",
                                                     "rank_test.cpp",
                                                     "remove_all_extents_test.cpp",
                                                     "remove_bounds_test.cpp",
                                                     "remove_const_test.cpp",
                                                     "remove_cv_ref_test.cpp",
                                                     "remove_cv_test.cpp",
                                                     "remove_extent_test.cpp",
                                                     "remove_pointer_test.cpp",
                                                     "remove_reference_test.cpp",
                                                     "remove_volatile_test.cpp",
                                                     "tricky_abstract_type_test.cpp",
                                                     "tricky_add_pointer_test.cpp",
                                                     "tricky_function_type_test.cpp",
                                                     "tricky_incomplete_type_test.cpp",
                                                     "tricky_is_enum_test.cpp",
                                                     "tricky_partial_spec_test.cpp",
                                                     "tricky_rvalue_test.cpp",
                                                     "type_identity_test.cpp",
                                                     "type_traits_test.cpp",
                                                     "type_with_alignment_test.cpp"};

inline constexpr string_view describeRunTests[] = {
    "quick.cpp",
    "pp_for_each_test.cpp",
    "pp_is_paren_test.cpp",
    "pp_is_empty_test.cpp",
    "pp_call_test.cpp",
    "pp_parse_test.cpp",
    "pp_name_test.cpp",
    "pp_pointer_test.cpp",
    "enumerators_test.cpp",
    "empty_enum_test.cpp",
    "trailing_comma_test.cpp",
    "nested_enum_test.cpp",
    "compute_base_modifiers.cpp",
    "bases_test.cpp",
    "members_test.cpp",
    "members_test2.cpp",
    "members_test3.cpp",
    "members_test4.cpp",
    "members_test5.cpp",
    "members_test6.cpp",
    "members_test7.cpp",
    "members_test8.cpp",
    "overloaded_test.cpp",
    "overloaded_test2.cpp",
    "class_template_test.cpp",
    "has_enumerators_test.cpp",
    "has_bases_test.cpp",
    "has_members_test.cpp",
    "enum_to_string_test.cpp",
    "enum_from_string_test.cpp",
    "operator_eq_test.cpp",
    "operator_lt_test.cpp",
    "descriptor_by_name_test.cpp",
    "descriptor_by_pointer_test.cpp",
    "union_test.cpp",
    "union_test2.cpp",
    "pedantic_enumerators_test.cpp",
    "pedantic_bases_test.cpp",
    "pedantic_members_test.cpp",
    "enum_from_string_test2.cpp",
};

inline constexpr string_view utilityRunTests[] = {
    "base_from_member_test.cpp", "base_from_member_ref_test.cpp",  "binary_test.cpp",
    "compressed_pair_test.cpp",  "compressed_pair_final_test.cpp", "iterators_test.cpp",
    "operators_test.cpp",        "string_ref_test1.cpp",           "string_ref_test2.cpp",
    "string_view_test1.cpp",     "string_view_test2.cpp",          "initialized_test.cpp",
};

inline constexpr string_view ioRunTests[] = {
    "ios_state_unit_test.cpp",      "ios_state_test.cpp",  "ostream_joiner_test.cpp",
    "make_ostream_joiner_test.cpp", "nullstream_test.cpp",
};

inline constexpr string_view containerHashRunTests[] = {
    "hash_info.cpp",
    "hash_fwd_test_1.cpp",
    "hash_fwd_test_2.cpp",
    "hash_number_test.cpp",
    "hash_enum_test.cpp",
    "hash_pointer_test.cpp",
    "hash_function_pointer_test.cpp",
    "hash_float_test.cpp",
    "hash_long_double_test.cpp",
    "hash_string_test.cpp",
    "hash_range_test.cpp",
    "hash_custom_test.cpp",
    "hash_global_namespace_test.cpp",
    "hash_friend_test.cpp",
    "hash_built_in_array_test.cpp",
    "hash_value_array_test.cpp",
    "hash_list_test.cpp",
    "hash_deque_test.cpp",
    "hash_set_test.cpp",
    "hash_map_test.cpp",
    "hash_complex_test.cpp",
    "hash_optional_test.cpp",
    "hash_variant_test.cpp",
    "hash_type_index_test.cpp",
    "hash_system_error_test.cpp",
    "hash_std_array_test.cpp",
    "hash_std_tuple_test.cpp",
    "hash_std_smart_ptr_test.cpp",
    "extensions_hpp_test.cpp",
    "implicit_test.cpp",
    "hash_no_ext_macro_1.cpp",
    "hash_no_ext_macro_2.cpp",
    "hash_reference_values.cpp",
    "is_range_test.cpp",
    "is_contiguous_range_test.cpp",
    "is_unordered_range_test.cpp",
    "hash_forward_list_test.cpp",
    "quick.cpp",
    "hash_number_test2.cpp",
    "hash_integral_test.cpp",
    "hash_string_test2.cpp",
    "hash_container_test.cpp",
    "hash_vector_test2.cpp",
    "hash_string_test3.cpp",
    "hash_string_test4.cpp",
    "hash_multiset_test.cpp",
    "hash_multimap_test.cpp",
    "hash_unordered_range_test.cpp",
    "hash_unordered_multiset_test.cpp",
    "hash_unordered_multimap_test.cpp",
    "hash_unordered_set_test.cpp",
    "hash_unordered_map_test.cpp",
    "is_range_test3.cpp",
    "is_contiguous_range_test2.cpp",
    "is_unordered_range_test2.cpp",
    "is_contiguous_range_test3.cpp",
    "is_described_class_test.cpp",
    "is_described_class_test2.cpp",
    "is_described_class_test3.cpp",
    "described_class_test.cpp",
    "hash_integral_test2.cpp",
    "hash_nullptr_test.cpp",
    "is_tuple_like_test.cpp",
    "hash_tuple_like_test.cpp",
    "hash_tuple_like_test2.cpp",
    "is_range_test4.cpp",
    "hash_container_test2.cpp",
};

inline constexpr string_view hash2RunTests[] = {
    "is_range.cpp",
    "is_contiguous_range.cpp",
    "is_unordered_range.cpp",
    "is_tuple_like.cpp",
    "endian.cpp",
    "flavor.cpp",
    "is_contiguously_hashable.cpp",
    "is_trivially_equality_comparable.cpp",
    "is_endian_independent.cpp",
    "has_constant_size.cpp",
    "get_integral_result.cpp",
    "get_integral_result_2.cpp",
    "get_integral_result_3.cpp",
    "get_integral_result_4.cpp",
    "get_integral_result_5.cpp",
    "get_integral_result_6.cpp",
    "digest.cpp",
    "detail_read.cpp",
    "detail_write.cpp",
    "detail_write_2.cpp",
    "detail_rot.cpp",
    "detail_has_tag_invoke.cpp",
    "append_integer.cpp",
    "append_bool.cpp",
    "append_byte_sized.cpp",
    "append_character.cpp",
    "append_floating_point.cpp",
    "append_pointer.cpp",
    "append_array.cpp",
    "append_container.cpp",
    "append_string.cpp",
    "append_string_view.cpp",
    "append_tuple_like.cpp",
    "append_tuple_like_2.cpp",
    "append_set.cpp",
    "append_map.cpp",
    "append_described.cpp",
    "append_described_2.cpp",
    "append_described_3.cpp",
    "append_described_4.cpp",
    "append_described_5.cpp",
    "append_tag_invoke.cpp",
    "append_tag_invoke_2.cpp",
    "append_tag_invoke_3.cpp",
    "hash_append_5.cpp",
    "hash_append_range.cpp",
    "hash_append_range_2.cpp",
    "append_zero_sized.cpp",
    "append_digest.cpp",
    "hash_append_provider.cpp",
    "append_integer_cx.cpp",
    "append_character_cx.cpp",
    "append_floating_point_cx.cpp",
    "append_vector_cx.cpp",
    "append_string_cx.cpp",
    "append_array_cx.cpp",
    "append_array_cx_2.cpp",
    "append_array_cx_3.cpp",
    "append_string_view_cx.cpp",
    "append_tuple_like_cx.cpp",
    "fnv1a.cpp",
    "fnv1a_cx.cpp",
    "fnv1a_cx_2.cpp",
    "xxhash.cpp",
    "xxhash_2.cpp",
    "xxhash_cx.cpp",
    "xxhash_cx_2.cpp",
    "siphash32.cpp",
    "siphash64.cpp",
    "siphash_cx.cpp",
    "siphash_cx_2.cpp",
    "md5.cpp",
    "hmac_md5.cpp",
    "md5_cx.cpp",
    "md5_cx_2.cpp",
    "hmac_md5_cx.cpp",
    "hmac_md5_cx_2.cpp",
    "sha1.cpp",
    "hmac_sha1.cpp",
    "sha1_cx.cpp",
    "sha1_cx_2.cpp",
    "sha2.cpp",
    "hmac_sha2.cpp",
    // ********   27s vs 7s  "sha2_cx.cpp",
    "sha2_cx_2.cpp",
    "detail_keccak.cpp",
    "sha3.cpp",
    "shake.cpp",
    "hmac_sha3.cpp",
    "sha3_224_cx.cpp",
    // ********    3s vs 2s  "sha3_256_cx.cpp",
    "sha3_384_cx.cpp",
    "sha3_512_cx.cpp",
    "shake_128_cx.cpp",
    "shake_256_cx.cpp",
    "sha3_cx_2.cpp",
    "ripemd.cpp",
    "hmac_ripemd.cpp",
    "ripemd_cx.cpp",
    "ripemd_cx_2.cpp",
    "concept.cpp",
    "plaintext_leak.cpp",
    "multiple_result.cpp",
    "integral_result.cpp",
    "quality.cpp",
};

inline constexpr string_view headerUnitsJsonDirs[] = {
    "preprocessor/list",        "preprocessor/list/detail",

    "preprocessor/control",     "preprocessor/slot",
    "preprocessor/slot/detail", "preprocessor/tuple",
    "preprocessor/punctuation", "preprocessor/config",

    "type_traits/detail",       "system/detail",
};
inline constexpr string_view headerUnitsJsonEntry[] = {
    "mpl/aux_", "integral_wrapper.hpp", ".", "config.hpp",

    "detail", "workaround.hpp",
    // These are very small headers
    ".", "io_fwd.hpp", ".", "call_traits.hpp", ".", "version.hpp", ".", "noncopyable.hpp", ".", "mem_fn.hpp", ".",
    "current_function.hpp", ".", "function_equal.hpp", ".", "compressed_pair.hpp"};

#endif // ARRAYDECLARATIONS_HPP
